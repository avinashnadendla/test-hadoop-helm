apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "hadoop.fullname" . }}-yarn-nm
  labels:
    app.kubernetes.io/name: {{ include "hadoop.name" . }}
    helm.sh/chart: {{ include "hadoop.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: yarn-nm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "hadoop.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: yarn-nm
  serviceName: {{ include "hadoop.fullname" . }}-yarn-nm
  replicas: {{ .Values.yarn.nodeManager.replicas }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "hadoop.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: yarn-nm
    spec:
      containers:
      - name: yarn-nm
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        command: ["yarn", "nodemanager"]
        volumeMounts:
        - name: yarn-conf
          mountPath: /opt/hadoop/etc/hadoop/
        ports:
        - containerPort: 8088
          name: web
        resources:
{{ toYaml .Values.yarn.nodeManager.resources | indent 10 }}
        env:
        - name: MY_CPU_LIMIT
          valueFrom:
            resourceFieldRef:
              containerName: yarn-nm
              resource: limits.cpu
              divisor: 1
        - name: MY_MEM_LIMIT
          valueFrom:
            resourceFieldRef:
              containerName: yarn-nm
              resource: limits.memory
              divisor: 1M
      volumes:
       - name: yarn-conf
         configMap:
          items:
           - name: yarn-site.xml
           - key: yarn-site.xml

